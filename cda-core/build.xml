<!--===========================================================================
  This is the build file for the Community Dashboard Framework Plugin project.

  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.

  See common_build.xml for more details
============================================================================-->
<project name="Community Data Access Core" basedir="." default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
    This build file is used to create the CDA project
  </description>


  <property file="../override.properties"
            description="Top level Properties customized for your development environment belong in this file.  This file will never be checked into the SCM." />
  <property file="../build.properties"
            description="Top level Properties customized for your particular project belong in this file." />


  <!-- Import subfloor.xml which contains all the default tasks -->
  <import file="../build-res/subfloor.xml"/>

  <property name="runtimelib.dir"
            value="${basedir}/runtime-lib"
            description="Directory that hosts Jar files required to run project source.  (IVY will populate this directory with required jars)" />


    <!-- Setup the classpath used for testing -->
  <path id="test.classpath">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${devlib.dir}">
      <include name="*" />
    </fileset>
    <fileset dir="${testlib.dir}">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${runtimelib.dir}">
      <include name="*.jar" />
    </fileset>
    <dirset dir="${testclasses.dir}" />
    <dirset dir="${classes.dir}" />
    <fileset dir="${runtimelib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>


  <property name="plugin.name"
            value="cda"
            description="Name of the plugin"/>

  <property name="resource.dir"
            value="resources"
            description="Name of the resource directory"/>

  <property name="stage.dir"
            value="${bin.dir}/stage"
            description="Name of the resource directory"/>

  <property name="samples.stage.dir"
            value="${bin.dir}/stage-samples"
            description="Name of the resource directory" />
  <property name="runtimelib.dir"
            value="${basedir}/runtime-lib"
            description="Directory that hosts Jar files required to run project source.  (IVY will populate this directory with required jars)" />

  <property name="test.resources.dir" value="${basedir}/test-resources" description="Directory that hosts the test resources files" />



  <echo>Core: project.revision = ${project.revision}</echo>
  <!--
      DON'T OVERRIDE SUBFLOOR UNLESS YOU HAVE TO
    -->

    <target name="dist-all" depends="dist, test" description="Creates a distribution" />

  <!-- override: add test resources dir and sample data -->
  <target name="init-tests" depends="clean-tests">
      <mkdir dir="${testclasses.dir}" />
      <mkdir dir="${testsrc.dir}" />
      <copy todir="${testclasses.dir}" overwrite='true'>
        <fileset dir='${test.resources.dir}' />
      </copy>
      <unzip src="${testclasses.dir}/sampledata.zip" dest="${testclasses.dir}/sampledata" />
  </target>

  <condition property="is.roundtrip">
    <istrue value="${test.roundtrip}"/>
  </condition>
  <condition property="is.not.roundtrip">
    <isfalse value="${test.roundtrip}"/>
  </condition>

  <target name="test" depends="compile,compile-tests, init-test-reports" description="Compiles and runs unit tests">
    <junit printsummary="yes" haltonfailure="${junit.haltonfailure}" fork="yes" dir="${testclasses.dir}" >
      <sysproperty key="java.awt.headless" value="${headless.unittest}"/>
      <classpath refid="test.classpath" />
      <formatter type="plain" />
      <batchtest todir="${testreports.xml.dir}">
          <fileset dir="${testsrc.dir}" casesensitive="yes">
              <include name="**/RoundtripSuite.java" if="is.roundtrip" />
              <include name="**/Test*.java" if="is.not.roundtrip" />
              <include name="**/*Test.java" if="is.not.roundtrip"/>
          </fileset>
        <formatter type="xml"/>
      </batchtest>
    </junit>

    <junitreport todir="${testreports.html.dir}">
      <fileset dir="${testreports.xml.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${testreports.html.dir}" />
    </junitreport>

  </target>

  <!-- Overriding resolve target so we can add resolve-runtime -->
  <target name="resolve"
          depends="resolve-default, resolve-test, resolve-runtime, ivy.check-releasable"
          description="Retrieves all the dependent libraries" />


  <target name="resolve-runtime" depends="resolve-init">
    <ivy:resolve file="ivy.xml" conf="runtime" />
    <ivy:retrieve conf="runtime" pattern="${runtimelib.dir}/[module]-[revision](-[classifier]).[ext]" />
    <!-- also copy to lib so it'll be in the classpath -->
    <copy todir="${lib.dir}">
      <fileset dir="${runtimelib.dir}"/>
    </copy>
  </target>

  <target name="clean-all" depends="subfloor.clean-all">
    <delete dir="${runtimelib.dir}" />
  </target>

</project>
